kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
    app.kubernetes.io/component: {{ .Values.name }}
    app.kubernetes.io/instance: {{ .Values.name }}
    app.kubernetes.io/part-of: {{ .Values.name }}
spec:
  selector:
    matchLabels:
      deployment: {{ .Values.name }}
      app.kubernetes.io/part-of: {{ .Values.name }}
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
  template:
    metadata:
      labels:
        deployment: {{ .Values.name }}
        app.kubernetes.io/part-of: {{ .Values.name }}
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 0
      schedulerName: default-scheduler
      volumes:
        - name: pg-data
          persistentVolumeClaim:
            claimName: {{ .Values.name }}
      containers:
      - name: {{ .Values.name }}
        image: postgres:13
        imagePullPolicy: Always
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        ports:
        - containerPort: 5432
          protocol: TCP
        volumeMounts:
          - name: pg-data
            mountPath: /var/lib/pgsql/data
        resources: {}
        env:
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.name }}
                key: POSTGRES_DATABASE_NAME
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.name }}
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.name }}
                key: POSTGRES_PASSWORD